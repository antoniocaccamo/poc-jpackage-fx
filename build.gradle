import java.nio.file.Paths

plugins {
    id 'application'
//    id('com.github.johnrengelman.shadow').version('4.0.1')
    id "org.panteleyev.jpackageplugin" version "1.3.1"

  //  id 'org.openjfx.javafxplugin' version '0.0.9'
}

group 'me.antoniocaccamo'
version '1.0.0'

repositories {
    mavenCentral()
}

def javaFXPlatform = getJavaFXPlatform()
def javaFXVersion = "17-ea+9"

//javafx {
//    modules = ['javafx.base', 'javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.media', 'javafx.web']
//}

dependencies {
//  test
    testImplementation 'org.testng:testng:6.14.3'
//  log
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.14.1'

//  javafx
    implementation "org.openjfx:javafx-base:${javaFXVersion}:${javaFXPlatform}"
    implementation "org.openjfx:javafx-controls:${javaFXVersion}:${javaFXPlatform}"
    implementation "org.openjfx:javafx-fxml:${javaFXVersion}:${javaFXPlatform}"
    implementation "org.openjfx:javafx-graphics:${javaFXVersion}:${javaFXPlatform}"
    implementation "org.openjfx:javafx-media:${javaFXVersion}:${javaFXPlatform}"
    implementation "org.openjfx:javafx-web:${javaFXVersion}:${javaFXPlatform}"
    implementation 'de.saxsys:mvvmfx:1.8.0'
}

test {
    useTestNG()
}

application {
    mainModule.set('me.antoniocaccamo.player')
    mainClass.set('me.antoniocaccamo.player.Main')
}

java {
    modularity.inferModulePath.set(true)
    toolchain {
        languageVersion = JavaLanguageVersion.of('16')
    }
}


task copyDependencies ( type: Copy) {
        from configurations.runtimeClasspath
        into "$buildDir/jmods"
}

task copyJar (type : Copy) {
        from tasks.jar
        into "$buildDir/jmods"
}

//run {
//    jvmArgs = ['--add-exports java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED']
//}

//jlink {
//
//    options = [
//            '--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages'
//    ]
//  //  addExtraModulePath '$buildDir/jmods'
//    launcher {
//        name = '"player-javafx-gradle'
//    }
//
//    forceMerge('log4j-api')
//    jpackage {
//        if (org.gradle.internal.os.OperatingSystem.current().windows) {
//            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
//        }
//    }
//}


tasks.jpackage {

    dependsOn("build", "copyDependencies", "copyJar")

    appName = "Application Name"
    appVersion = project.version.toString()
    vendor = "Antonio Caccamo"
    copyright = "Copyright (c) 2020 Vendor"
    runtimeImage = System.getProperty("java.home")
    module = "me.antoniocaccamo.player/me.antoniocaccamo.player.Main"
    modulePaths =  ["$buildDir/jmods"]
    destination = "$buildDir/dist"
    javaOptions = ["-Dfile.encoding=UTF-8"]

    mac {
        icon = "icons/icons.icns"
    }

    windows {
        icon = "icon.ico"
        winMenu = true
        winDirChooser = true
    }
}

private static String getJavaFXPlatform() {
    def currentOS = org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.currentOperatingSystem;
    if (currentOS.isLinux()) {
        return 'linux'
    } else if (currentOS.isMacOsX()) {
        return 'mac'
    }
    return 'win'
}